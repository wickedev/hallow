{"version":3,"sources":["views/ErrorBoundary.tsx","api/utils.ts","api/resource.ts","api/hooks.ts","api/greeting.ts","api/greeting-stub.ts","views/App.tsx","reportWebVitals.ts","index.tsx"],"names":["ErrorBoundary","props","state","previousProps","previousState","children","this","setState","error","undefined","style","color","message","toString","metadata","callstack","React","Component","utf8Decoder","TextDecoder","Status","statusMap","grpc","Code","OK","Canceled","Unknown","InvalidArgument","DeadlineExceeded","NotFound","AlreadyExists","PermissionDenied","ResourceExhausted","FailedPrecondition","Aborted","OutOfRange","Unimplemented","Internal","Unavailable","DataLoss","Unauthenticated","Resource","factory","initialArgs","status","PENDING","result","suspender","forceUpdate","fetch","REJECTED","FULLFILED","args","then","r","e","useResource","request","setValue","useState","useRef","v","current","useForceUpdate","resource","useMemo","useEffect","refresh","Greeting","data","jspb","initialize","created","includeInstance","$messageInstance","reader","nextField","isEndGroup","getFieldNumber","setField","readString","skipField","writer","serializeBinaryToWriter","getResultBuffer","writeString","toObject","getField","value","GreetingRequest","name","bytes","GreetingResponse","repeatedFields_","greetingList","greeting","map","create","deserializeBinaryFromReader","msg","readMessage","addGreeting","toObjectList","opt_index","addToRepeatedWrapperField","list","length","writeRepeatedMessage","getRepeatedWrapperField","setRepeatedWrapperField","GreetingService","serviceName","service","methodName","requestStream","responseStream","requestType","responseType","hooks","client","greetingRequest","Promise","resolve","reject","unary","host","debug","onEnd","output","console","log","JSON","stringify","code","trailers","throwable","headersMap","base64","toByteArray","decode","base64Decode","statusMessage","useGreeting","bind","createHooks","read","App","uuid","id","setID","disposable","setInterval","clearInterval","onClick","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.33f87756.chunk.js","sourcesContent":["import React, { ReactNode } from \"react\";\n\nexport class ErrorBoundary extends React.Component<{}, { error?: Error }> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidUpdate(\n    previousProps: { children: ReactNode },\n    previousState: { error?: Error }\n  ) {\n    if (previousProps.children !== this.props.children) {\n      this.setState({ error: undefined });\n    }\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    return { error };\n  }\n\n  render() {\n    const error = this.state.error;\n    if (error) {\n      return (\n        <div style={{ color: \"#c7384b\" }}>\n          {toString(error)}\n          {(error as any)?.metadata?.callstack && (\n            <pre>{(error as any)?.metadata?.callstack}</pre>\n          )}\n        </div>\n      ) as any;\n    }\n\n    return this.props.children as any;\n  }\n}\n\nfunction toString(error: string | Error) {\n  return typeof error === \"object\" ? error.message : error;\n}\n","import base64 from \"base64-js\";\nimport { grpc } from \"@improbable-eng/grpc-web\";\n\nconst utf8Decoder = new TextDecoder(\"utf-8\");\n\nexport function base64Decode(message: string) {\n  const bytes = base64.toByteArray(message);\n  return utf8Decoder.decode(bytes);\n}\n\nexport type Optional<T> = T | undefined;\n\nexport const isDevelopment =\n  !process.env.NODE_ENV || process.env.NODE_ENV === \"development\";\n\nexport const statusMap = {\n  [grpc.Code.OK]: \"OK\",\n  [grpc.Code.Canceled]: \"Canceled\",\n  [grpc.Code.Unknown]: \"Unknown\",\n  [grpc.Code.InvalidArgument]: \"Invalid Argument\",\n  [grpc.Code.DeadlineExceeded]: \"Deadline Exceeded\",\n  [grpc.Code.NotFound]: \"NotFound\",\n  [grpc.Code.AlreadyExists]: \"Already Exists\",\n  [grpc.Code.PermissionDenied]: \"Permission Denied\",\n  [grpc.Code.ResourceExhausted]: \"Resource Exhausted\",\n  [grpc.Code.FailedPrecondition]: \"Failed Precondition\",\n  [grpc.Code.Aborted]: \"Aborted\",\n  [grpc.Code.OutOfRange]: \"Out Of Range\",\n  [grpc.Code.Unimplemented]: \"Unimplemented\",\n  [grpc.Code.Internal]: \"Internal\",\n  [grpc.Code.Unavailable]: \"Unavailable\",\n  [grpc.Code.DataLoss]: \"DataLoss\",\n  [grpc.Code.Unauthenticated]: \"Unauthenticated\"\n};\n","import { useEffect, useMemo } from \"react\";\nimport { useForceUpdate } from \"../api/hooks\";\nimport { isDevelopment, Optional } from \"./utils\";\n\nexport enum Status {\n  PENDING,\n  FULLFILED,\n  REJECTED\n}\n\ntype PromiseFactory<T> = (...args: any[]) => Promise<T>;\n\ntype ForceUpdate = () => void;\n\nexport class Resource<ARGS, T> {\n  public status: Status = Status.PENDING;\n  private result: Optional<T>;\n  private suspender: Optional<Promise<void>>;\n  public forceUpdate: Optional<ForceUpdate>;\n  public initialArgs: Optional<ARGS>;\n\n  constructor(private readonly factory: PromiseFactory<T>, initialArgs: ARGS) {\n    // escape React Strict Mode fetching twice\n    if (isDevelopment) {\n      this.initialArgs = initialArgs;\n    } else {\n      this.fetch(initialArgs);\n    }\n  }\n\n  public read() {\n    // escape React Strict Mode fetching twice\n    if (isDevelopment && this.initialArgs) {\n      this.fetch(this.initialArgs);\n      this.initialArgs = undefined;\n    }\n\n    switch (this.status) {\n      case Status.PENDING:\n        throw this.suspender;\n      case Status.REJECTED:\n        throw this.result;\n      case Status.FULLFILED:\n        return this.result;\n    }\n  }\n\n  public refresh(args: ARGS) {\n    this.status = Status.PENDING;\n    this.suspender = undefined;\n    this.result = undefined;\n    this.fetch(args);\n    this.forceUpdate?.();\n  }\n\n  private fetch(args: ARGS) {\n    this.suspender = this.factory(args).then(\n      r => {\n        this.status = Status.FULLFILED;\n        this.result = r;\n      },\n      e => {\n        this.status = Status.REJECTED;\n        this.result = e;\n      }\n    );\n  }\n}\n\nexport function useResource<ARGS, R>(\n  factory: (req: ARGS) => Promise<R>,\n  request: any\n): Resource<ARGS, R> {\n  const forceUpdate = useForceUpdate();\n  const resource = useMemo(() => new Resource(factory, request), []);\n  resource.forceUpdate = forceUpdate;\n\n  useEffect(() => {\n    if (\n      resource.status === Status.FULLFILED ||\n      resource.status === Status.REJECTED\n    ) {\n      resource.refresh(request);\n    }\n  }, [resource, request]);\n\n  return resource;\n}\n","import { useRef, useState } from \"react\";\nimport { greetingStub } from \"./greeting-stub\";\n\nexport function useForceUpdate(): () => void {\n  const setValue = useState(0)[1];\n  return useRef(() => setValue(v => ~v)).current;\n}\n\nexport const hooks = greetingStub.createHooks();\n","import { grpc } from \"@improbable-eng/grpc-web\";\nimport * as jspb from \"google-protobuf\";\nimport { Optional } from \"./utils\";\n\ninterface IObject {\n  $messageInstance?: jspb.Message;\n}\n\ninterface IGreeting {\n  readonly message: string;\n  readonly created?: string;\n}\n\nexport class Greeting extends jspb.Message {\n  static create(data: IGreeting): Greeting {\n    const message = new Greeting([]);\n    message.message = data.message;\n    message.created = data.created;\n    return message;\n  }\n\n  static toObject(\n    includeInstance: boolean,\n    message: Greeting\n  ): IGreeting & IObject {\n    return {\n      message: message.message,\n      created: message.created,\n      $messageInstance: includeInstance ? message : undefined\n    };\n  }\n\n  static deserializeBinaryFromReader(\n    message: jspb.Message,\n    reader: jspb.BinaryReader\n  ): jspb.Message {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) {\n        break;\n      }\n      const field = reader.getFieldNumber();\n      switch (field) {\n        case 1:\n          jspb.Message.setField(message, 1, reader.readString());\n          break;\n        case 2:\n          jspb.Message.setField(message, 2, reader.readString());\n          break;\n        default:\n          reader.skipField();\n          break;\n      }\n    }\n    return message;\n  }\n\n  constructor(data: jspb.Message.MessageArray) {\n    super();\n\n    jspb.Message.initialize(this, data, 0, -1, undefined, undefined);\n  }\n\n  get message(): string {\n    return jspb.Message.getField(this, 1) as string;\n  }\n\n  get created(): Optional<string> {\n    return jspb.Message.getField(this, 2) as string;\n  }\n\n  set message(value: string) {\n    jspb.Message.setField(this, 1, value);\n  }\n\n  set created(value: Optional<string>) {\n    jspb.Message.setField(this, 2, value);\n  }\n\n  serializeBinary(): Uint8Array {\n    const writer = new jspb.BinaryWriter();\n    this.serializeBinaryToWriter(writer);\n    return writer.getResultBuffer();\n  }\n\n  serializeBinaryToWriter(writer: jspb.BinaryWriter) {\n    let v;\n    if ((v = this.message) != null) {\n      writer.writeString(1, v);\n    }\n    if ((v = this.created) != null) {\n      writer.writeString(2, v);\n    }\n  }\n\n  toObject(includeInstance: boolean = false): IGreeting & IObject {\n    return Greeting.toObject(includeInstance, this);\n  }\n}\n\nexport interface IGreetingRequest {\n  readonly name: string;\n}\n\nexport class GreetingRequest extends jspb.Message {\n  public static create({ name }: IGreetingRequest) {\n    const message = new GreetingRequest([]);\n    message.name = name;\n    return message;\n  }\n\n  static deserializeBinary(bytes: Uint8Array): GreetingRequest {\n    return undefined as any;\n  }\n\n  static toObject(\n    includeInstance: boolean,\n    message: GreetingRequest\n  ): IGreetingRequest & IObject {\n    return {\n      name: message.name,\n      $messageInstance: includeInstance ? message : undefined\n    };\n  }\n\n  constructor(data: jspb.Message.MessageArray) {\n    super();\n    jspb.Message.initialize(this, data, 0, -1, undefined, undefined);\n  }\n\n  get name(): string {\n    return jspb.Message.getField(this, 1) as string;\n  }\n\n  set name(value: string) {\n    jspb.Message.setField(this, 1, value);\n  }\n\n  serializeBinary(): Uint8Array {\n    const writer = new jspb.BinaryWriter();\n    this.serializeBinaryToWriter(writer);\n    return writer.getResultBuffer();\n  }\n\n  serializeBinaryToWriter(writer: jspb.BinaryWriter) {\n    let v;\n    if ((v = this.name) != null) {\n      writer.writeString(1, v);\n    }\n  }\n\n  toObject(includeInstance: boolean = false): IGreetingRequest {\n    return GreetingRequest.toObject(includeInstance, this);\n  }\n}\n\nexport interface IGreetingResponse {\n  greeting: IGreeting[];\n}\n\nexport class GreetingResponse extends jspb.Message {\n  static repeatedFields_ = [1];\n\n  static create(data: IGreetingResponse) {\n    const message = new GreetingResponse([]);\n    message.greetingList = data.greeting.map(Greeting.create);\n    return message;\n  }\n  static deserializeBinary(bytes: Uint8Array): GreetingResponse {\n    return GreetingResponse.deserializeBinaryFromReader(\n      new GreetingResponse([]),\n      new jspb.BinaryReader(bytes)\n    );\n  }\n\n  static deserializeBinaryFromReader(\n    msg: GreetingResponse,\n    reader: jspb.BinaryReader\n  ): GreetingResponse {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) {\n        break;\n      }\n      const field = reader.getFieldNumber();\n      switch (field) {\n        case 1:\n          const value = new Greeting(undefined as any);\n          reader.readMessage(value, Greeting.deserializeBinaryFromReader);\n          msg.addGreeting(value);\n          break;\n        default:\n          reader.skipField();\n          break;\n      }\n    }\n    return msg;\n  }\n\n  static toObject(\n    includeInstance: boolean,\n    message: GreetingResponse\n  ): IGreetingResponse & IObject {\n    const list = jspb.Message.toObjectList(\n      message.greetingList,\n      Greeting.toObject,\n      includeInstance\n    );\n    return {\n      greeting: list as IGreeting[],\n      $messageInstance: includeInstance ? message : undefined\n    };\n  }\n\n  constructor(data: jspb.Message.MessageArray) {\n    super();\n\n    jspb.Message.initialize(\n      this,\n      data,\n      0,\n      -1,\n      GreetingResponse.repeatedFields_,\n      null\n    );\n  }\n\n  get greetingList(): Greeting[] {\n    return jspb.Message.getRepeatedWrapperField(this, Greeting as any, 1);\n  }\n\n  set greetingList(value: Greeting[]) {\n    jspb.Message.setRepeatedWrapperField(this, 1, value);\n  }\n\n  addGreeting(value: Greeting, opt_index?: number) {\n    return jspb.Message.addToRepeatedWrapperField(\n      this,\n      1,\n      value,\n      Greeting as any,\n      opt_index\n    );\n  }\n\n  serializeBinary(): Uint8Array {\n    const writer = new jspb.BinaryWriter();\n    this.serializeBinaryToWriter(writer);\n    return writer.getResultBuffer();\n  }\n\n  serializeBinaryToWriter(writer: jspb.BinaryWriter) {\n    const list = this.greetingList;\n    if (list.length > 0) {\n      writer.writeRepeatedMessage(1, list, Greeting.serializeBinaryToWriter);\n    }\n  }\n\n  toObject(includeInstance: boolean = false): IGreetingResponse & IObject {\n    return GreetingResponse.toObject(includeInstance, this);\n  }\n}\n\nexport interface IClient {\n  host: string;\n}\n\nexport class GreetingService implements grpc.ServiceDefinition {\n  serviceName: string = \"greeting.GreetingService\";\n  static service = new GreetingService();\n\n  static Greeting: grpc.UnaryMethodDefinition<\n    GreetingRequest,\n    GreetingResponse\n  > = {\n    methodName: \"Greeting\",\n    service: GreetingService.service,\n    requestStream: false,\n    responseStream: false,\n    requestType: GreetingRequest as any,\n    responseType: GreetingResponse as any\n  };\n}\n","import { useResource } from \"./resource\";\nimport { base64Decode, isDevelopment, statusMap } from \"./utils\";\nimport {\n  GreetingRequest,\n  GreetingResponse,\n  GreetingService,\n  IClient,\n  IGreetingRequest,\n  IGreetingResponse\n} from \"./greeting\";\nimport { grpc } from \"@improbable-eng/grpc-web\";\n\n// noinspection JSUnusedGlobalSymbols\nexport class GreetingStub {\n  constructor(private readonly client: IClient) {}\n\n  greeting(greetingRequest: IGreetingRequest): Promise<IGreetingResponse> {\n    return new Promise<IGreetingResponse>((resolve, reject) => {\n      grpc.unary(GreetingService.Greeting, {\n        host: this.client.host,\n        debug: true,\n        onEnd(output: grpc.UnaryOutput<GreetingResponse>): void {\n          if (output.status === grpc.Code.OK) {\n            const result = output.message?.toObject();\n\n            console.log(JSON.stringify(result));\n\n            result\n              ? resolve(result)\n              : reject({\n                  message: \"deserialize failed\",\n                  code: output.status,\n                  metadata: output.trailers\n                });\n          } else {\n            const throwable = (output as any).trailers.headersMap[\n              \"armeria.grpc.throwableproto-bin\"\n            ];\n\n            const callstack = throwable && base64Decode(throwable[0]);\n\n            const message = output.statusMessage\n              ? `${output.statusMessage} (${statusMap[output.status]})`\n              : statusMap[output.status];\n\n            reject({\n              message: message,\n              code: output.status,\n              status: statusMap[output.status],\n              metadata: {\n                callstack,\n                trailers: output.trailers\n              }\n            });\n          }\n        },\n        request: GreetingRequest.create(greetingRequest)\n      });\n    });\n  }\n\n  createHooks() {\n    return {\n      useGreeting: (greetingRequest: IGreetingRequest) => {\n        return useResource(this.greeting.bind(this), greetingRequest);\n      }\n    };\n  }\n}\n\nexport const greetingStub = new GreetingStub({\n  host: isDevelopment ? \"/api\" : \"http://localhost:8080\"\n});\n","import React, { Suspense, useEffect, useState } from \"react\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { v4 as uuid } from \"uuid\";\nimport { hooks } from \"../api/hooks\";\n\nfunction Greeting({ greeting }: any) {\n  return <pre>{JSON.stringify(greeting.read(), null, 4)}</pre>;\n}\n\nexport function App() {\n  const [id, setID] = useState(uuid());\n\n  useEffect(() => {\n    const disposable = setInterval(() => {\n      setID(uuid());\n    }, 10000);\n\n    return () => {\n      clearInterval(disposable);\n    };\n  });\n\n  const greeting = hooks.useGreeting({ name: id });\n  return (\n    <div>\n      <button\n        onClick={() => {\n          greeting.refresh({ name: uuid() });\n        }}\n      >\n        Refresh\n      </button>\n\n      <ErrorBoundary>\n        <Suspense fallback={<p>loading</p>}>\n          <Greeting greeting={greeting} />\n        </Suspense>\n      </ErrorBoundary>\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./views/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}